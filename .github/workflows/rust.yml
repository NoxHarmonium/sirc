name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

defaults:
  run:
    working-directory: ./sirc-vm

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "--deny warnings"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup update stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Build
        run: cargo build --verbose --release

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo llvm-cov --verbose --all-targets --all-features --workspace --lcov --output-path lcov.info

      - uses: actions/upload-artifact@v4
        with:
          name: lcov-main
          path: ./sirc-vm/lcov.info
          if-no-files-found: error

  examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example-name:
          [
            "basic-video",
            "boring",
            "byte-sieve",
            "faults",
            "hardware-exception",
            "software-exception",
            "store-load",
          ]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup update stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Run ${{ matrix.example-name }} and capture coverage
        uses: coactions/setup-xvfb@v1
        with:
          run: |
            source <(cargo llvm-cov --manifest-path=../../sirc-vm/Cargo.toml show-env --export-prefix)
            make clean check
            cargo llvm-cov --manifest-path=../../sirc-vm/Cargo.toml report --lcov --output-path lcov-${{ matrix.example-name }}.info
          working-directory: ./examples/${{ matrix.example-name }}

      - uses: actions/upload-artifact@v4
        with:
          name: lcov-${{ matrix.example-name }}
          path: ./examples/${{ matrix.example-name }}/lcov-${{ matrix.example-name }}.info
          if-no-files-found: error

  upload-to-codecov:
    runs-on: ubuntu-latest
    needs: [examples, build]
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: List artifacts
        run: ls -la
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: lcov-*.info
          fail_ci_if_error: true