name: SIRC VM

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

defaults:
  run:
    working-directory: ./sirc-vm

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "--deny warnings"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup update stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Build
        run: cargo build --verbose --release

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      # Currently separate until llvm-cov supports them
      - name: Run doctests
        run: cargo test --doc --verbose --all-features --workspace 

      # TODO: Include doc tests in coverage once it is stabilised
      # https://github.com/taiki-e/cargo-llvm-cov/issues/2
      - name: Run tests
        run: cargo llvm-cov --verbose --all-targets --all-features --workspace --codecov --output-path codecov-main.json

      - uses: actions/upload-artifact@v4
        with:
          name: codecov-main
          path: ./sirc-vm/codecov-main.json
          if-no-files-found: error

  examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example-name:
          [
            "basic-video",
            "boring",
            "byte-sieve",
            "faults",
            "hardware-exception",
            "software-exception",
            "store-load",
          ]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup update stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Run ${{ matrix.example-name }} and capture coverage
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          source <(cargo llvm-cov --manifest-path=../../sirc-vm/Cargo.toml show-env --export-prefix)
          make clean check
          cargo llvm-cov --manifest-path=../../sirc-vm/Cargo.toml report --codecov --output-path codecov-${{ matrix.example-name }}.json
        working-directory: ./examples/${{ matrix.example-name }}

      - uses: actions/upload-artifact@v4
        with:
          name: codecov-${{ matrix.example-name }}
          path: ./examples/${{ matrix.example-name }}/codecov-${{ matrix.example-name }}.json
          if-no-files-found: error

  upload-to-codecov:
    runs-on: ubuntu-latest
    needs: [examples, build]
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: List artifacts
        run: ls -la
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: codecov-*.json
          fail_ci_if_error: true
